CfhighlanderTemplate do

    Parameters do
      ComponentParam 'MaxNatGateways', '1'
      ComponentParam 'SingleNatGateway', 'true'
    end

     Component name:'vpc', template: 'vpc@2.1.0' do
       parameter name: 'MaxNatGateways', value: Ref('MaxNatGateways')
       parameter name: 'SingleNatGateway', value: Ref('SingleNatGateway')
       parameter name: 'DnsDomain', value: dns_domain
       parameter name: 'dnszoneAddNSRecords', value: 'true'
       parameter name: 'dnszoneParentIAMRole', value: ops_account_dns_iam_role
     end

     Component template: 'keypair@1.0.0', name: 'keypair' do
       parameter name: 'KeyPairName', value: Ref('EnvironmentName')
       parameter name: 'SSMParameterPath', value: FnSub('/loyaltycorp/{{ ssm_prefix }}/${EnvironmentName}')
     end

    {% if redis_enabled %}
     Component template: 'redis', name: 'redis' do
       parameter name: 'DnsDomain', value: dns_domain
       parameter name: 'CacheInstanceType', value: FindInMap('EnvironmentType', Ref('EnvironmentType'), 'CacheInstanceType')
       parameter name: 'CacheClusters', value: FindInMap('EnvironmentType', Ref('EnvironmentType'), 'CacheClusters')
       parameter name: 'Cluster', value: FindInMap('EnvironmentType', Ref('EnvironmentType'), 'RedisCluster')
       parameter name: 'RedisEndpointType', value: FindInMap('EnvironmentType', Ref('EnvironmentType'), 'RedisEndpointType')
     end
     {% endif %}

     {% if elasticsearch_enabled %}
     Component name: 'elasticsearch', template: 'elasticsearch@master.snapshot' do
       parameter name: 'ESDomainName', value: FnSub("${EnvironmentName}-elasticsearch")
       parameter name: 'ElasticsearchVersion', value: '6.5'
       parameter name: 'InstanceType', value: 't2.small.elasticsearch'
       parameter name: 'EncryptionAtRest', value: false #The T2 instance types do not support encryption of data at rest
       parameter name: 'VPCId', value: cfout('vpc', 'VPCId')
       parameter name: 'Subnets', value: cfout('vpc', 'CacheSubnets')
     end
    {% endif %}

     Component template: 'acm@1.1.0', name: 'acm' do
       parameter name: 'DomainName', value: FnSub("*.${EnvironmentName}.#{dns_domain}")
     end

     Component name:'loadbalancer', template: 'loadbalancer' do
       parameter name: 'DnsDomain', value: dns_domain
       parameter name: 'SslCertId', value: cfout('acm', 'CertificateArn')
     end

     Component name:'ecs', template: 'ecs@2.0.0' do
       parameter name: 'InstanceType', value: 't2.small'
       parameter name: 'KeyName', value: cfout('keypair','KeyPair')
       parameter name: 'VPCId', value: cfout('vpc', 'VPCId')
       parameter name: 'SubnetIds', value: cfout('vpc', 'ComputeSubnets')
     end

     Component name:'sqs', template: 'sqs@1.1.2'

     Component name:'bastion', template: 'bastion@2.0.1' do
       parameter name: 'KeyName', value: cfout('keypair','KeyPair')
       parameter name: 'DnsDomain', value: dns_domain
       parameter name: 'InstanceType', value: 't2.micro'
       parameter name: 'SubnetIds', value: cfout('vpc', 'PublicSubnets')
     end

     Component name: 'aurora', template: 'aurora-mysql@2.0.4' do
       parameter name: 'DnsDomain', value: dns_domain
       parameter name: 'AutoPause', value: cfmap('EnvironmentType',Ref('EnvironmentType'),'AutoPause')
       parameter name: 'MinCapacity', value: cfmap('EnvironmentType',Ref('EnvironmentType'),'MinCapacity')
       parameter name: 'MaxCapacity', value: cfmap('EnvironmentType',Ref('EnvironmentType'),'MaxCapacity')
       parameter name: 'SecondsUntilAutoPause', value: cfmap('EnvironmentType',Ref('EnvironmentType'),'SecondsUntilAutoPause')
       parameter name: 'KmsKeyId', value: cfout('kms', 'AuroraKey')
     end

     Component name: 'kms', template: 'kms@0.1.1'

end
